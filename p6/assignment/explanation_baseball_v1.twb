<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0728.2252                               -->
<workbook source-build='10.3.2 (10300.17.0728.2252)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.3'>
      <aliases enabled='yes' />
      <column alias='Light' caption='weight_kg (bin) Parameter' datatype='real' name='[weight_kg (bin) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='50.0'>
        <calculation class='tableau' formula='50.0' />
        <aliases>
          <alias key='50.0' value='Light' />
          <alias key='80.0' value='Average' />
          <alias key='200.0' value='Heavy' />
        </aliases>
        <members>
          <member alias='Light' value='50.0' />
          <member alias='Average' value='80.0' />
          <member alias='Heavy' value='200.0' />
        </members>
      </column>
    </datasource>
    <datasource caption='baseball_data' inline='true' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='baseball_data' name='textscan.0bcizg312vrapc1de7a050ecxiw1'>
            <connection class='textscan' directory='C:/Users/jensl/Documents/data-analyst-nanodegree/p6/assignment/data' filename='baseball_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0bcizg312vrapc1de7a050ecxiw1' name='baseball_data.csv' table='[baseball_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='X' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='string' name='handedness' ordinal='2' />
            <column datatype='integer' name='height' ordinal='3' />
            <column datatype='integer' name='weight' ordinal='4' />
            <column datatype='real' name='avg' ordinal='5' />
            <column datatype='integer' name='HR' ordinal='6' />
            <column datatype='real' name='HR_normalized' ordinal='7' />
            <column datatype='real' name='avg_normalized' ordinal='8' />
            <column datatype='real' name='valuability' ordinal='9' />
            <column datatype='real' name='valuability_normalized' ordinal='10' />
            <column datatype='real' name='ratio_HR_valuability' ordinal='11' />
            <column datatype='real' name='ratio_avg_valuability' ordinal='12' />
            <column datatype='real' name='ratioi_HR_valuability' ordinal='13' />
            <column datatype='real' name='ratioi_avg_valuability' ordinal='14' />
            <column datatype='string' name='weight_bin' ordinal='15' />
            <column datatype='string' name='height_bin' ordinal='16' />
            <column datatype='real' name='bmi' ordinal='17' />
            <column datatype='string' name='bmi_bin' ordinal='18' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handedness</remote-name>
            <remote-type>129</remote-type>
            <local-name>[handedness]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>handedness</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height</remote-name>
            <remote-type>20</remote-type>
            <local-name>[height]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>height</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>avg</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HR]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>HR</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HR_normalized</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HR_normalized]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>HR_normalized</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_normalized</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_normalized]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>avg_normalized</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>valuability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[valuability]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>valuability</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>valuability_normalized</remote-name>
            <remote-type>5</remote-type>
            <local-name>[valuability_normalized]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>valuability_normalized</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratio_HR_valuability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ratio_HR_valuability]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>ratio_HR_valuability</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratio_avg_valuability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ratio_avg_valuability]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>ratio_avg_valuability</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratioi_HR_valuability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ratioi_HR_valuability]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>ratioi_HR_valuability</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratioi_avg_valuability</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ratioi_avg_valuability]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>ratioi_avg_valuability</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight_bin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weight_bin]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>weight_bin</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height_bin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[height_bin]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>height_bin</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bmi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bmi]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>bmi</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bmi_bin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bmi_bin]</local-name>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias>bmi_bin</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[baseball_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg_normalized:qk]&quot;' value='Batting Average' />
          <alias key='&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR_normalized:qk]&quot;' value='Homeruns' />
        </aliases>
      </column>
      <column caption='height_cm' datatype='real' name='[Calculation_212795121468162051]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[height] * 2.54' />
      </column>
      <column caption='weight_kg' datatype='real' name='[Calculation_212795121468489732]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[weight] * 0.45359237' />
      </column>
      <column aggregation='None' caption='HR Bin 2' datatype='integer' name='[HR (bin) 2]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[HR]' peg='0' size='150' />
      </column>
      <column aggregation='None' datatype='integer' name='[HR (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[HR]' peg='0' size='26.8' />
      </column>
      <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
      <column datatype='real' name='[HR_normalized]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' hidden='true' name='[X]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[avg (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[avg]' peg='0' size='0.0172' />
      </column>
      <column datatype='real' name='[avg]' role='measure' type='quantitative' />
      <column datatype='real' name='[avg_normalized]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[bmi (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[bmi]' peg='0' size='0.5' />
      </column>
      <column datatype='real' name='[bmi]' role='measure' type='quantitative' />
      <column datatype='string' name='[bmi_bin]' role='dimension' type='nominal' />
      <column datatype='string' name='[handedness]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;B&quot;' value='Both' />
          <alias key='&quot;L&quot;' value='Left' />
          <alias key='&quot;R&quot;' value='Right' />
        </aliases>
      </column>
      <column aggregation='None' datatype='integer' name='[height (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[height]' peg='0' size='10' />
      </column>
      <column datatype='integer' name='[height]' role='measure' type='quantitative' />
      <column aggregation='None' caption='height_cm (bin)' datatype='integer' name='[height_cm (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Calculation_212795121468162051]' peg='0' size='20' />
      </column>
      <column datatype='string' name='[name]' role='dimension' type='nominal' />
      <column aggregation='None' caption='ratio_HR_valuability (bin)' datatype='integer' name='[ratio_HR_valuability (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[ratio_HR_valuability]' peg='0' size='0.1' />
      </column>
      <column datatype='real' hidden='true' name='[ratio_HR_valuability]' role='measure' type='quantitative' />
      <column aggregation='None' caption='ratio_avg_valuability (bin)' datatype='integer' name='[ratio_avg_valuability (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[ratio_avg_valuability]' peg='0' size='0.1' />
      </column>
      <column datatype='real' hidden='true' name='[ratio_avg_valuability]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[ratioi_HR_valuability]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[ratioi_avg_valuability]' role='measure' type='quantitative' />
      <column datatype='real' name='[valuability_normalized]' role='measure' type='quantitative' />
      <column aggregation='None' caption='weight (bin) 2' datatype='integer' name='[weight (bin) 2]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[weight]' peg='0' size='7.6' />
      </column>
      <column aggregation='None' datatype='integer' name='[weight (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[weight]' peg='0' size='7.6' />
      </column>
      <column datatype='integer' name='[weight]' role='measure' type='quantitative' />
      <column aggregation='None' caption='weight_kg (bin)' datatype='integer' name='[weight_kg (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Calculation_212795121468489732]' peg='0' size='20' />
      </column>
      <column-instance column='[HR]' derivation='Avg' name='[avg:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR_normalized]' derivation='Avg' name='[avg:HR_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_normalized]' derivation='Avg' name='[avg:avg_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[valuability_normalized]' derivation='Avg' name='[avg:valuability_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR]' derivation='Median' name='[med:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR_normalized]' derivation='Median' name='[med:HR_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_normalized]' derivation='Median' name='[med:avg_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_212795121468489732]' derivation='None' name='[none:Calculation_212795121468489732:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR (bin) 2]' derivation='None' name='[none:HR (bin) 2:ok]' pivot='key' type='ordinal' />
      <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR_normalized]' derivation='None' name='[none:HR_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_normalized]' derivation='None' name='[none:avg_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bmi]' derivation='None' name='[none:bmi:ok]' pivot='key' type='ordinal' />
      <column-instance column='[bmi_bin]' derivation='None' name='[none:bmi_bin:nk]' pivot='key' type='nominal' />
      <column-instance column='[handedness]' derivation='None' name='[none:handedness:nk]' pivot='key' type='nominal' />
      <column-instance column='[height (bin)]' derivation='None' name='[none:height (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[height]' derivation='None' name='[none:height:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ratio_HR_valuability (bin)]' derivation='None' name='[none:ratio_HR_valuability (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[ratio_HR_valuability]' derivation='None' name='[none:ratio_HR_valuability:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ratio_avg_valuability (bin)]' derivation='None' name='[none:ratio_avg_valuability (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[valuability_normalized]' derivation='None' name='[none:valuability_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weight]' derivation='None' name='[none:weight:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weight_kg (bin)]' derivation='None' name='[none:weight_kg (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_212795121468489732]' derivation='Sum' name='[sum:Calculation_212795121468489732:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR]' derivation='Sum' name='[sum:HR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HR_normalized]' derivation='Sum' name='[sum:HR_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_normalized]' derivation='Sum' name='[sum:avg_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ratio_HR_valuability]' derivation='Sum' name='[sum:ratio_HR_valuability:ok]' pivot='key' type='ordinal' />
      <column-instance column='[valuability_normalized]' derivation='Sum' name='[sum:valuability_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
      <group caption='Action (bmi,name)' hidden='true' name='[Action (bmi,name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:bmi:ok]' />
          <groupfilter function='level-members' level='[name]' />
        </groupfilter>
      </group>
      <group caption='Action (bmi_bin,name)' hidden='true' name='[Action (bmi_bin,name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[bmi_bin]' />
          <groupfilter function='level-members' level='[name]' />
        </groupfilter>
      </group>
      <group caption='Action (height,name)' hidden='true' name='[Action (height,name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:height:ok]' />
          <groupfilter function='level-members' level='[name]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/jensl/Documents/My Tableau Repository/Datasources/baseball_data.tde' schema='Extract' tablename='Extract' update-time='08/22/2017 11:41:23 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_212795121468162051]' formula='[height] * 2.54' />
            <calculation column='[Calculation_212795121468489732]' formula='[weight] * 0.45359237' />
            <calculation column='[HR (bin) 2]' formula='SYS_NUMBIN([HR],150)' />
            <calculation column='[HR (bin)]' formula='SYS_NUMBIN([HR],26.8)' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[avg (bin)]' formula='SYS_NUMBIN([avg],0.0172)' />
            <calculation column='[bmi (bin)]' formula='SYS_NUMBIN([bmi],0.5)' />
            <calculation column='[height (bin)]' formula='SYS_NUMBIN([height],10)' />
            <calculation column='[height_cm (bin)]' formula='SYS_NUMBIN([Calculation_212795121468162051],20)' />
            <calculation column='[ratio_HR_valuability (bin)]' formula='SYS_NUMBIN([ratio_HR_valuability],0.1)' />
            <calculation column='[ratio_avg_valuability (bin)]' formula='SYS_NUMBIN([ratio_avg_valuability],0.1)' />
            <calculation column='[weight (bin) 2]' formula='SYS_NUMBIN([weight],7.6)' />
            <calculation column='[weight (bin)]' formula='SYS_NUMBIN([weight],7.6)' />
            <calculation column='[weight_kg (bin)]' formula='SYS_NUMBIN([Calculation_212795121468489732],20)' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1157' timestamp-start='2017-08-22 11:41:23.852' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_212795121468162051</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_212795121468162051]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_212795121468162051</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>213814.66000000018</statistic>
                <statistic aggregation='Avg' datatype='real'>184.80091616248936</statistic>
                <statistic aggregation='Min' datatype='real'>165.09999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>203.19999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.4413720973341277</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.4390200885372622</statistic>
                <statistic aggregation='Var' datatype='real'>29.608530301646407</statistic>
                <statistic aggregation='VarP' datatype='real'>29.582939523511882</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>39547372.517999902</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_212795121468489732</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_212795121468489732]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_212795121468489732</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>96833.806332339824</statistic>
                <statistic aggregation='Avg' datatype='real'>83.69386891299898</statistic>
                <statistic aggregation='Min' datatype='real'>63.502931800000006</statistic>
                <statistic aggregation='Max' datatype='real'>111.13013065000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.0061854029891055</statistic>
                <statistic aggregation='StdevP' datatype='real'>7.0031570106267491</statistic>
                <statistic aggregation='Var' datatype='real'>49.086633901057617</statistic>
                <statistic aggregation='VarP' datatype='real'>49.044208115490584</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8161140.0423152018</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HR</remote-name>
              <remote-type>2</remote-type>
              <local-name>[HR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HR</remote-alias>
              <ordinal>2</ordinal>
              <family>baseball_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>212</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>52481.0</statistic>
                <statistic aggregation='Avg' datatype='real'>45.359550561797754</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>563</statistic>
                <statistic aggregation='Stdev' datatype='real'>74.065109921988963</statistic>
                <statistic aggregation='StdevP' datatype='real'>74.033095608877986</statistic>
                <statistic aggregation='Var' datatype='real'>5485.6405077563077</statistic>
                <statistic aggregation='VarP' datatype='real'>5480.8992454332692</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8721915.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HR_normalized</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HR_normalized]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HR_normalized</remote-alias>
              <ordinal>3</ordinal>
              <family>baseball_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>212</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>93.216696269982066</statistic>
                <statistic aggregation='Avg' datatype='real'>0.080567585367313801</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.13155436931081527</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.1314975055219858</statistic>
                <statistic aggregation='Var' datatype='real'>0.017306552084766374</statistic>
                <statistic aggregation='VarP' datatype='real'>0.01729159395850469</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>27.516618344380667</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1157.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1157.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg</remote-alias>
              <ordinal>5</ordinal>
              <family>baseball_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>216.11999999999981</statistic>
                <statistic aggregation='Avg' datatype='real'>0.18679343128781314</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.32800000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.10617544251611546</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.10612954865509254</statistic>
                <statistic aggregation='Var' datatype='real'>0.011273224593492941</statistic>
                <statistic aggregation='VarP' datatype='real'>0.011263481097733655</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>53.401643999999976</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_normalized</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_normalized]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_normalized</remote-alias>
              <ordinal>6</ordinal>
              <family>baseball_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>157</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>658.90243902439033</statistic>
                <statistic aggregation='Avg' datatype='real'>0.56949216856040652</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.32370561742718168</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.32356569711918498</statistic>
                <statistic aggregation='Var' datatype='real'>0.1047853267539129</statistic>
                <statistic aggregation='VarP' datatype='real'>0.10469476035222414</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>496.37161659726439</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bmi</remote-name>
              <remote-type>5</remote-type>
              <local-name>[bmi]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bmi</remote-alias>
              <ordinal>7</ordinal>
              <family>baseball_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>236</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>28333.143094954507</statistic>
                <statistic aggregation='Avg' datatype='real'>24.488455570401474</statistic>
                <statistic aggregation='Min' datatype='real'>19.789908176175899</statistic>
                <statistic aggregation='Max' datatype='real'>30.683452420267301</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.496001153120853</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.4953545133010937</statistic>
                <statistic aggregation='Var' datatype='real'>2.2380194501389217</statistic>
                <statistic aggregation='VarP' datatype='real'>2.236085120449951</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>696422.06633498135</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bmi_bin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bmi_bin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bmi_bin</remote-alias>
              <ordinal>8</ordinal>
              <family>baseball_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;average (24-26)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;very low (-22)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>handedness</remote-name>
              <remote-type>129</remote-type>
              <local-name>[handedness]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>handedness</remote-alias>
              <ordinal>9</ordinal>
              <family>baseball_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;B&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;R&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;R&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>height</remote-name>
              <remote-type>16</remote-type>
              <local-name>[height]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>height</remote-alias>
              <ordinal>10</ordinal>
              <family>baseball_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>84179.0</statistic>
                <statistic aggregation='Avg' datatype='real'>72.756266205704407</statistic>
                <statistic aggregation='Min' datatype='integer'>65</statistic>
                <statistic aggregation='Max' datatype='integer'>80</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.1422724792705532</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1413464915552494</statistic>
                <statistic aggregation='Var' datatype='real'>4.5893313754400022</statistic>
                <statistic aggregation='VarP' datatype='real'>4.5853647968959752</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6129855.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>height_bin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[height_bin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>height_bin</remote-alias>
              <ordinal>11</ordinal>
              <family>baseball_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;average (70-73)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;tall (73-)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>12</ordinal>
              <family>baseball_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1157</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adolfo Phillips&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zach Crouch&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ratio_HR_valuability</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ratio_HR_valuability]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ratio_HR_valuability</remote-alias>
              <ordinal>13</ordinal>
              <family>baseball_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>801</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>90.236987731971965</statistic>
                <statistic aggregation='Avg' datatype='real'>0.077992210658575603</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.55593220338983096</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.10222838097332969</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.10218419321203755</statistic>
                <statistic aggregation='Var' datatype='real'>0.010450641876428236</statistic>
                <statistic aggregation='VarP' datatype='real'>0.010441609342395021</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19.1187241655383</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ratio_avg_valuability</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ratio_avg_valuability]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ratio_avg_valuability</remote-alias>
              <ordinal>14</ordinal>
              <family>baseball_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>804</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>800.76301226802821</statistic>
                <statistic aggregation='Avg' datatype='real'>0.6921028628072845</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.38956365382468006</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.38939526667446406</statistic>
                <statistic aggregation='Var' datatype='real'>0.15175984038123516</statistic>
                <statistic aggregation='VarP' datatype='real'>0.15162867370847696</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>729.64474870159484</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>valuability</remote-name>
              <remote-type>5</remote-type>
              <local-name>[valuability]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>valuability</remote-alias>
              <ordinal>15</ordinal>
              <family>baseball_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>835</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>752.11913529437288</statistic>
                <statistic aggregation='Avg' datatype='real'>0.65005975392772075</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.7987804878048799</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.39798253199377059</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.39781050582105087</statistic>
                <statistic aggregation='Var' datatype='real'>0.15839009577217264</statistic>
                <statistic aggregation='VarP' datatype='real'>0.15825319854160033</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>672.02133072642175</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>valuability_normalized</remote-name>
              <remote-type>5</remote-type>
              <local-name>[valuability_normalized]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>valuability_normalized</remote-alias>
              <ordinal>16</ordinal>
              <family>baseball_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>835</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>418.12724809585472</statistic>
                <statistic aggregation='Avg' datatype='real'>0.36138915133608879</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.22125130592196021</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.22115567103271938</statistic>
                <statistic aggregation='Var' datatype='real'>0.048952140372172825</statistic>
                <statistic aggregation='VarP' datatype='real'>0.048909830829932395</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>207.69532561008697</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>2</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>17</ordinal>
              <family>baseball_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>213482.0</statistic>
                <statistic aggregation='Avg' datatype='real'>184.51339671564389</statistic>
                <statistic aggregation='Min' datatype='integer'>140</statistic>
                <statistic aggregation='Max' datatype='integer'>245</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.445994832283111</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.439318369973231</statistic>
                <statistic aggregation='Var' datatype='real'>238.57875635891654</statistic>
                <statistic aggregation='VarP' datatype='real'>238.37255172939285</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>39666086.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight_bin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weight_bin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight_bin</remote-alias>
              <ordinal>18</ordinal>
              <family>baseball_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;average (175-200)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;light (-175)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HR (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[HR (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HR (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1580.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.365600691443388</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>21</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.6841117343271055</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.6829515390127652</statistic>
                <statistic aggregation='Var' datatype='real'>7.204455802352463</statistic>
                <statistic aggregation='VarP' datatype='real'>7.1982289606909653</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10486.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HR (bin) 2</remote-name>
              <remote-type>16</remote-type>
              <local-name>[HR (bin) 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HR (bin) 2</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>126.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.10890233362143474</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>3</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.38604361986592423</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.38587675423467216</statistic>
                <statistic aggregation='Var' datatype='real'>0.14902967643918619</statistic>
                <statistic aggregation='VarP' datatype='real'>0.14890086945868558</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>186.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[avg (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>12135.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10.488331892826276</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>19</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.9850659358551654</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.9824789178238396</statistic>
                <statistic aggregation='Var' datatype='real'>35.821014256533871</statistic>
                <statistic aggregation='VarP' datatype='real'>35.790054002206702</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>168685.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bmi (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[bmi (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bmi (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>56082.0</statistic>
                <statistic aggregation='Avg' datatype='real'>48.471910112359552</statistic>
                <statistic aggregation='Min' datatype='integer'>39</statistic>
                <statistic aggregation='Max' datatype='integer'>61</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.0046585914923503</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.0033598412300342</statistic>
                <statistic aggregation='Var' datatype='real'>9.0279732514287936</statistic>
                <statistic aggregation='VarP' datatype='real'>9.0201703359132974</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2728838.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>height (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[height (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>height (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>8044.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6.9524632670700086</statistic>
                <statistic aggregation='Min' datatype='integer'>6</statistic>
                <statistic aggregation='Max' datatype='integer'>8</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.22855321945950177</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.22845442835073268</statistic>
                <statistic aggregation='Var' datatype='real'>0.052236574125303178</statistic>
                <statistic aggregation='VarP' datatype='real'>0.052191425833060051</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>55986.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>height_cm (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[height_cm (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>height_cm (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10249.0</statistic>
                <statistic aggregation='Avg' datatype='real'>8.8582541054451163</statistic>
                <statistic aggregation='Min' datatype='integer'>8</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.36588243958411015</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.36572428853302835</statistic>
                <statistic aggregation='Var' datatype='real'>0.13386995959602002</statistic>
                <statistic aggregation='VarP' datatype='real'>0.13375425522298975</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>90943.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ratio_HR_valuability (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[ratio_HR_valuability (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ratio_HR_valuability (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>543.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.46931719965427832</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.91892857377045645</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.91853137099686577</statistic>
                <statistic aggregation='Var' datatype='real'>0.84442972369180525</statistic>
                <statistic aggregation='VarP' datatype='real'>0.84369987950538194</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1231.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ratio_avg_valuability (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[ratio_avg_valuability (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ratio_avg_valuability (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7496.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6.4788245462402765</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.6549642973683203</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.6533844553678341</statistic>
                <statistic aggregation='Var' datatype='real'>13.358764015037099</statistic>
                <statistic aggregation='VarP' datatype='real'>13.347217978723325</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>64008.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[weight (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>27608.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.861711322385478</statistic>
                <statistic aggregation='Min' datatype='integer'>18</statistic>
                <statistic aggregation='Max' datatype='integer'>32</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.9878249253629416</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9869656969133058</statistic>
                <statistic aggregation='Var' datatype='real'>3.9514479338941841</statistic>
                <statistic aggregation='VarP' datatype='real'>3.9480326807101789</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>663342.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight (bin) 2</remote-name>
              <remote-type>16</remote-type>
              <local-name>[weight (bin) 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight (bin) 2</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>27608.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.861711322385478</statistic>
                <statistic aggregation='Min' datatype='integer'>18</statistic>
                <statistic aggregation='Max' datatype='integer'>32</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.9878249253629416</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9869656969133058</statistic>
                <statistic aggregation='Var' datatype='real'>3.9514479338941841</statistic>
                <statistic aggregation='VarP' datatype='real'>3.9480326807101789</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>663342.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight_kg (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[weight_kg (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight_kg (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4258.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.6802074330164216</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.49010692835847491</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.48989508182670238</statistic>
                <statistic aggregation='Var' datatype='real'>0.24020480122497928</statistic>
                <statistic aggregation='VarP' datatype='real'>0.2399971911979914</statistic>
                <statistic aggregation='Count' datatype='integer'>1157</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>15948.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.454682' measure-ordering='alphabetic' measure-percentage='0.406742' parameter-percentage='0.138577' rowDisplayCount='1000' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ratio_avg_valuability (bin):ok]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>10</bucket>
            </map>
            <map to='#bd273f'>
              <bucket>9</bucket>
            </map>
            <map to='#ca3a42'>
              <bucket>8</bucket>
            </map>
            <map to='#cd4e22'>
              <bucket>3</bucket>
            </map>
            <map to='#dc5447'>
              <bucket>7</bucket>
            </map>
            <map to='#de5747'>
              <bucket>6</bucket>
            </map>
            <map to='#ef701b'>
              <bucket>2</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>0</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>4</bucket>
            </map>
            <map to='#f6a143'>
              <bucket>1</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ratio_HR_valuability (bin):ok]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>5</bucket>
            </map>
            <map to='#439350'>
              <bucket>4</bucket>
            </map>
            <map to='#8eb858'>
              <bucket>3</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>0</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:HR (bin) 2:ok]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>5</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>7</bucket>
            </map>
            <map to='#33834a'>
              <bucket>4</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>6</bucket>
            </map>
            <map to='#4b9c53'>
              <bucket>3</bucket>
            </map>
            <map to='#7cb257'>
              <bucket>2</bucket>
            </map>
            <map to='#b6c35c'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[sum:ratio_HR_valuability:ok]' palette='Bars' type='shape'>
            <map to='Bars/bars0.png'>
              <bucket>0.29631096315913202</bucket>
            </map>
            <map to='Bars/bars0.png'>
              <bucket>0.336966599012754</bucket>
            </map>
            <map to='Bars/bars0.png'>
              <bucket>0.370718849573762</bucket>
            </map>
            <map to='Bars/bars0.png'>
              <bucket>0.40410164353635503</bucket>
            </map>
            <map to='Bars/bars0.png'>
              <bucket>0.41918546462391298</bucket>
            </map>
            <map to='Bars/bars0.png'>
              <bucket>0.43580187138980497</bucket>
            </map>
            <map to='Bars/bars0.png'>
              <bucket>0.49304325093676499</bucket>
            </map>
            <map to='Bars/bars1.png'>
              <bucket>0.29657394620898297</bucket>
            </map>
            <map to='Bars/bars1.png'>
              <bucket>0.34641062500261899</bucket>
            </map>
            <map to='Bars/bars1.png'>
              <bucket>0.378781347265012</bucket>
            </map>
            <map to='Bars/bars1.png'>
              <bucket>0.40952904160215697</bucket>
            </map>
            <map to='Bars/bars1.png'>
              <bucket>0.42526620120265601</bucket>
            </map>
            <map to='Bars/bars1.png'>
              <bucket>0.44177988478583002</bucket>
            </map>
            <map to='Bars/bars1.png'>
              <bucket>0.49528556805249102</bucket>
            </map>
            <map to='Bars/bars2.png'>
              <bucket>0.32026318561554501</bucket>
            </map>
            <map to='Bars/bars2.png'>
              <bucket>0.35022650723488502</bucket>
            </map>
            <map to='Bars/bars2.png'>
              <bucket>0.38648116843860397</bucket>
            </map>
            <map to='Bars/bars2.png'>
              <bucket>0.41187161030895397</bucket>
            </map>
            <map to='Bars/bars2.png'>
              <bucket>0.42610461774286301</bucket>
            </map>
            <map to='Bars/bars2.png'>
              <bucket>0.45910770636853998</bucket>
            </map>
            <map to='Bars/bars2.png'>
              <bucket>0.52178920545342</bucket>
            </map>
            <map to='Bars/bars3.png'>
              <bucket>0.33079998559233498</bucket>
            </map>
            <map to='Bars/bars3.png'>
              <bucket>0.35878569380146702</bucket>
            </map>
            <map to='Bars/bars3.png'>
              <bucket>0.38927630559429699</bucket>
            </map>
            <map to='Bars/bars3.png'>
              <bucket>0.41361421599339199</bucket>
            </map>
            <map to='Bars/bars3.png'>
              <bucket>0.42752925922134599</bucket>
            </map>
            <map to='Bars/bars3.png'>
              <bucket>0.47812696229405299</bucket>
            </map>
            <map to='Bars/bars3.png'>
              <bucket>0.54457152379076801</bucket>
            </map>
            <map to='Bars/bars4.png'>
              <bucket>0.33641164769085102</bucket>
            </map>
            <map to='Bars/bars4.png'>
              <bucket>0.365540155607397</bucket>
            </map>
            <map to='Bars/bars4.png'>
              <bucket>0.39321472641789401</bucket>
            </map>
            <map to='Bars/bars4.png'>
              <bucket>0.41836890727155401</bucket>
            </map>
            <map to='Bars/bars4.png'>
              <bucket>0.43096826359409701</bucket>
            </map>
            <map to='Bars/bars4.png'>
              <bucket>0.48024203867047199</bucket>
            </map>
            <map to='Bars/bars4.png'>
              <bucket>0.55593220338983096</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0023249549894384701</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0024625364125048801</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.00358336792885704</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0042039424777626797</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0045485747567968601</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0048314871553146402</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0052683992418644998</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0070976467406004898</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0072749049050159099</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0076073847295667499</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0084947684657619392</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0097370549861588405</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.010406685660983199</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.011294376915395501</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0126882607798638</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.013429193757062601</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0140105078809107</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0147184204621943</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.015178579692171</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.015680489537234301</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0159983091218001</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.016527815103466799</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.016907543315914601</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.017422184450548599</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.017789508890234802</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.018519956240957099</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.019286318033148401</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0200816912002659</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.020704746941981801</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.021276043693728802</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0215117232333169</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.022612325221391501</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0232785540800555</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.024247402357386299</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.024880213403456398</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.025330956410933001</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.026184837276138299</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.027417107829478999</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.028703587948493599</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.029642444468830902</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.030225486095851101</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.031594446202749399</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.031924212438763297</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.032518175809649698</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.033134660066673399</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.033575331894990498</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.034104497010657701</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.036225081451212102</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0367970831580424</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.037928331898600801</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.038996220967262497</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.039382717609737002</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.040440669852989199</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.041207180546637301</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.041580643992900901</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.042892637635674101</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.043425494825569899</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.044088516611013602</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.045441650888315699</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0459693962057411</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.047561506114360302</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.048312770479269997</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0491419231816944</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.049521665728756298</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.050082835177084097</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0511828225454092</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.052465400931914603</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.053513034225926598</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0548054200714507</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0555601090656744</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.056700619664370601</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.057544280294446602</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.058317638846817399</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.059600936506272503</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.061270660513771398</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.062240401442155598</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.063241332524011901</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.064143932727094899</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0648045837388498</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.066069481965969901</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.067147326198076895</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.068164443751716403</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.069100682452231499</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.071301612470109799</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.073038408594024107</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.074085053820363497</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.075412205215791894</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.076552542350904695</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.078799054619120595</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.081579505636388897</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.083184281481086003</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.085342945626237496</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.0871472756257409</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.087924383165697395</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.089150045946960396</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.090804226456881798</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.092567622655235798</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.095423859932161306</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.099573510247600999</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.102522426780858</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.105160476141751</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.10693752155239999</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.109332754853149</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.11264634273483801</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.117006685569134</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.11995446260565901</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.12216169127533701</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.12425597373451</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.12807920896925101</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.12970485674227999</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.133021429662979</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.13621419590019301</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.14078595955742099</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.143566487758675</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.14516337688688599</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.14714861684028999</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.150829562594268</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.15269239599010301</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.15750563955955599</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.16053359436356801</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.16318007050990699</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.165542267198201</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.16991432556286101</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.1718222513837</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.175108701455087</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.17671053644269999</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.183168994421054</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.18551042156588399</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.19052439066471899</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.19598821680598999</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.201702538561228</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.20703398053187799</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.21104174050546601</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.21588204528492599</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.22203201136789599</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.22883623283024199</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.23227422498200401</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.23516981132075501</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.23796168964061001</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.24247065643431101</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.25265728099838197</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.25577967342824298</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.26458082881870199</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.26818734538135802</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.27538484958920201</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.28316228104020402</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.2956346270263</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.29996576144739001</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.30782802924366298</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.31877621035342402</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.32913138915020401</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.34883875513486901</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0021217413804256401</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.00235312686079963</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0027024132220510302</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0037206769817142299</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0042969619954672297</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0046207270601328499</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0048923460141549902</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0054661200546611997</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0071411465023622396</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0073514030421659698</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0078818365319919294</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0090912870546170192</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0098191098438072996</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.010673608851285399</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0114723020853008</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0127252129921321</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0135752224598193</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.014297026538129001</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0148686751466468</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.015212551680271399</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.015781623390162099</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.016050780867692901</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.016640213365802001</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.016916309945699801</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.017434598109480101</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.017880505887483598</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.018593840790238202</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.019366457060195401</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0201188422465018</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.020869565217391299</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.021293324196631401</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.021555941758065199</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0226745525770028</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.023439377895003499</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.02439405320581</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.024915681686974001</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.025476010829523801</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.026263532124783801</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0275250529731393</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.028734702679389702</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.029867892016082701</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.030663997070715699</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.031745795394477201</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0319659178715377</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0327054059029269</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.033269817349282402</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.033724838850001999</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.034611021711029602</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0363119214490705</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.036831293388730001</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.038106693273922597</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.039007191426252898</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.039444114574329801</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.040506829352631703</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.041283520649164102</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0421174280119418</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.043210771075131403</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.043533658950944999</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.044264821825568797</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.045577078064641598</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.046126956277163497</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.047626307726932798</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.048552431939013402</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.049236311779937703</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.049639693127975899</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.050132562063147798</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.051571168661979701</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.052751385589865397</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0543516740104696</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0548447292208704</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0559329259627682</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.056913661814857103</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.057676151276156502</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0588323922542133</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.059722483832485698</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.061289024320128803</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.062425655421801403</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.063445394405973105</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.064416714505846503</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.065007756918009002</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.066290591990679396</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.067374335731986895</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.068585907662408699</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.069500360215281595</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.071410664098064305</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0730846836586906</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.074380633822779096</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.075624087361750594</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.076832981962989003</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.079123568797731206</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.082257053291536</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.083435083435083393</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.0855799148114567</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.087242881750937307</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.088186153698428402</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.089237918762316598</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.091411683118263504</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.093442663561820294</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.096228148837003397</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.100548844831957</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.10291303946599401</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.105196387972261</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.107099542867805</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.10982347141873899</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.11315498275076501</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.118203113088555</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.12089613253004</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.12228021419372299</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.124897780829614</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.12840543089488801</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.13057055985284699</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.13340174448435099</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.136282280746612</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.14103026436239599</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.14362756395482801</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.145171105933844</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.149245850068814</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.150865895792998</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.152960444136017</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.157976121067708</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.160625088419976</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.16419817020541999</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.16580961179772299</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.170244396314191</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.172232724217601</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.175781658475374</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.18058424957345101</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.183526886140705</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.18713613711517901</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.191250602958872</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.196297191048251</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.20204531083055299</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.20748964204503401</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.21410566697128899</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.216645822843747</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.226219332397083</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.22899492494831</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.232877928071375</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.235263528325316</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.239768516168333</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.245566255255663</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.25288301590564999</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.25593383174106199</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.266528879997527</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.26878594841981601</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.27730415460476798</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.28443053955595998</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.29587278899410402</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.30085798148566301</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.31436547888593303</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.336495824324897</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.36720129881714902</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0021451789066127798</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.00236266981689309</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0031734667221378298</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0038434046941095098</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0043612961559429302</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0046391242238660304</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0050623924434532296</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0055974129030606596</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0071704437805144598</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0074137697210795196</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0080636569995656791</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0091268930303093493</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0099025594191303606</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0107227212174212</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.012453205561419401</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0127810466430269</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0136814882789689</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0144746326179374</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.014906719385552301</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.015231490797641</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.015853196819694101</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0161461025375963</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.016708389124992701</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0169867716255808</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.017452006980802799</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.018215947840188401</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.018743392668361999</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.019474350854971501</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.020147832674706701</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.021121772168201401</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.021314964339674801</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.021671765257781701</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.022773033395820302</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0235624929445932</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0246095082190846</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.024939383443020401</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.025703482639047599</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0265463936488783</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.027934993844700599</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.028814209046767202</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.029969195426304</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.031094128285155901</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.031779096524161297</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.032014175131953398</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.032735697736588798</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0332924508352717</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.033821655581825302</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.035417596498553097</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.036508841985168301</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.037089911939728902</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.038253877870241398</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.039113098565306502</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.039951278928136401</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.040606475480272103</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.041305978525709497</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.042372698891161603</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.043267402791895899</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.043886824689426597</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.044531939447423799</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.045756056051168698</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0463015245623941</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.047698136313191197</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.048583104982865298</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.049372373983952701</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.049713746374465198</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.050716047564702001</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.051789473684210503</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.053089000077409701</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.054409355755075002</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.055052030882846603</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.056032546456523502</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.056990749428354998</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.057888406630758803</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.058973556459722</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.060169133968044297</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.061330383159075699</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.062487652056109101</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.063676543864985002</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.064487486839935604</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.065421883645815901</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.066472604001621305</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.067626617006418102</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.068708962069936902</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.069917399413802303</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.071651046437883198</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.073272821332831695</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.074563704403175599</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.076041266296953805</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0779342005889192</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.080186035418281607</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.082600065179391502</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.083694242917436795</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.086032481940693198</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.087597797915667699</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.0888189174722126</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.089689937226555105</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.091720622082643199</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.093706562645935798</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.096414441002004705</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.10068498990990001</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.10327073378523501</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.10662493939260401</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.107516134405915</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.111873800895331</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.11342356145726901</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.119040677784587</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.121210115551143</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.12253594298155999</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.12495047694511301</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.12897736063122101</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.13200666224993299</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.13446756175053801</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.137104639821652</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.141787818806452</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.14381653290707899</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.145442142065319</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.14947250140458199</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.150888900535145</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.15329215024835699</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.15900520284324399</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.161531295798549</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.164782230943361</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.166233355931311</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.17028403001071801</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.173002648578445</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.176068076642728</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.18204671966568201</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.183735336760248</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.18899452607317799</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.19300813253466501</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.199164525505586</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.20493960113381199</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.208481688365554</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.21476710141069999</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.216823977098973</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.22748569233148899</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.229963795184185</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.232990357447666</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.23615961443328301</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.24137193772779</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.24866678090549801</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.25386189421007399</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.25967904121867902</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.266767312180056</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.26924004330003698</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.27865923942743498</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.28872317621034899</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.30540748155217801</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.31451393503672698</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.326666808537805</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.33089190459080697</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.356941783809549</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.36720858814262802</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.40965798144273202</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0022357335659950401</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0024215935266670599</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0033757358692519902</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0039745050044834402</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0043941910937248798</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0046763615625891103</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0051292476582169601</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0069151141626316798</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0071999824390672198</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0075093294260399701</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0083726866624122508</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0093091899869444297</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0099448183857861906</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.010995936867230801</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.012560601070714701</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0130190588966877</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.013789430905702201</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.014612941618243299</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.015022029256318001</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.015501677773051699</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0159254224121189</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.016296652064822299</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.016765630457561999</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.017057822750202501</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.017610265496228301</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.018281273637862</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.018776953706412899</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0198858469240163</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.020542511586477599</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.021207201252891598</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.021412891801245299</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.021916343712414799</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.023184978601447099</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0237873903096712</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.024704375988551599</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.025189901697944599</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.025990148043475401</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.026786808041486899</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.027991308514898301</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0295186603069553</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0299861461754302</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.031351558019499098</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.031808014067934702</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.032287131336841697</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.032900758573130198</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0335158996157933</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0339624874267795</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.035945697886272401</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.036652395884986297</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0372546173892742</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.038626862156273901</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.039183562017885198</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.040095993617582502</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.040648139542088797</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.041439804592791403</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.042717912726378197</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.043291043175556397</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0439215304364763</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.044613132634687899</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.045917389958886501</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.046496012176105897</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.047934194868368897</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.048619963831490302</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.049445248432223803</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.049924226882581503</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.050847786067241503</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0518663177286348</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.053240876007194002</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0545831379252961</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.055440090146488</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.056077652768585902</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0571745179946586</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.058226309716447197</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.059503382591934703</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.060225679375041703</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.062138662241878299</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.062988093713993096</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.064002997213528104</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.064652380818291902</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.065430348453652296</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.066587717814244607</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.067880794701986796</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.0689519858732517</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.069977385357171198</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.071783947825325697</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.073288992499795202</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.075180501967375898</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.076274142497254699</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.078352572524608102</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.081001800976984797</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.082706183567383004</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.083928196514801601</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.086126229351666195</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.087743434528723005</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.088842541492581806</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.089836599997327904</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.092265682353021905</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.093893727059332396</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.097523139769377903</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.10236578399245599</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.10361646743663</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.106699241181977</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.107909225191352</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.11202046671054799</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.11462519657522301</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.11979393597662601</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.12145256420429</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.123662255543527</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.12582430630400199</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.12930224095581799</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.132223565957649</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.134986830553117</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.13846235027175299</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.142929095714278</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.14394323365433401</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.14571469782201099</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.14957106620685701</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.151065292963451</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.155299210468062</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.159960056431901</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.16164742166427301</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.16515060974260201</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.16834831376279999</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.17122036269484101</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.17342737754232501</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.17622313671696399</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.18222116770157601</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.18397696813263201</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.190039427878407</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.19409159049154101</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.199595037049802</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.205674870669384</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.209639681796912</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.21532308562425501</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.217242323060923</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.22848529143065999</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.23066763483342001</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.233608840743698</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.236873097349066</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.241764641648164</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.24923134211943301</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.25515701237259603</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.26158436105252503</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.26769364176592098</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.269808987913502</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.28205266012283098</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.28916345851404601</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.30680245487778102</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.31707464434602001</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.327005966936328</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.33399919403411898</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.34718903724525602</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.36907758161409399</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0022617725953151002</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0024521714426692801</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0034764544404286201</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0041888293626721699</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0044444745560606796</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0047142015321155004</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0051748075224031303</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0070832643482892903</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0072597959289071199</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.00754173245244263</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0084536808735470193</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0096965396952093802</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0102061454686892</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0111218863804363</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0126698650350353</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0132661040256694</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.013926778264884801</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0146444261885202</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.015099898720191501</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0156204290175322</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.015987855914322901</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0163729845754505</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.016846430405752399</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.017348072142592701</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.017744356834688099</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0183635927377429</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.019049831571611098</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.020032369377347502</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0205886045302104</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0212501754651175</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.021432585370953602</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0224224443198753</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.023226994299472399</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.024091429914504799</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0248549406772322</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0252395059828402</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0260077273513638</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.026993663072998102</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0284202089636299</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.029624500425250101</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.030005946300333899</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.031492786903609397</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.031841127198091797</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.032299649072548897</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.032990328820116099</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.033543466986128298</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.034038078370600001</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.036001229310269098</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.036758388309039401</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.037655943056866599</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0388414664232496</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0393168901862899</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.040276212764728002</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0410780482917543</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.041533591276820297</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.042735321133788903</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.043327629169293599</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.044027141121752503</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.044940887856564998</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.045953699379545</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.046714034782333498</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.048130969318421098</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.048655272492744303</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0494852471029434</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.050058927768969197</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.051065788493951901</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.051912533711492903</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.053445121725412402</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.054793147515514999</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.055488982561008302</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.056434602517126002</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.057308425911096202</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.058280385513231302</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.059554070738615697</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.061042037979485597</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.062187673514713999</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.063134888110672305</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.064037106497778495</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.064691826284847306</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.065890405862877102</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0668071358336845</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.068136890282719895</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.068997352997890601</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.070951353823523994</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.072224116376861006</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.073856777397624404</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.075327784427803898</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.076517631277748202</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.078512049167070996</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.081052433068664401</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.082907375161489605</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.084530376570064597</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.0862131277886201</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.087884150444904205</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.089106759073676101</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.089870400306874501</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.092475345832541703</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.094668700779285006</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.097790034658815597</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.102476187424397</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.10435889277760101</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.106839746412436</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.108318674727215</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.112053111352779</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.11497866606781899</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.11991326710705499</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.12189891309645701</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.123949673231672</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.126165764647133</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.129447158153528</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.132933452216908</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.135386632512459</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.140458015267176</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.14320285407778899</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.14397954055309201</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.14658332578434</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.15025106445455899</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.15151602639982001</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.15638196431004001</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.16002087623456299</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.16261774913237501</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.16530029827655901</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.16957863844411</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.17156389387041901</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.17481678880746199</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.17628616643277301</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.182452688776466</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.18534205050750399</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.19025409433392701</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.19496111207684499</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.20061600297079399</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.206748238783834</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.210807426573659</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.21559550561797799</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.221369062766228</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.228554325612283</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.23194926249088199</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.234599110043406</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.23742888990536401</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.242039149415575</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.250288022742575</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.25559426672498498</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.26267936723291602</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.26811108922592097</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.27264624290192402</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.282192945176371</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.29317034610675102</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.299937585577914</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.30720637688379598</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.31724740643273402</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.32769882917128501</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.34772962116366102</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.36187332192710597</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.369959173563223</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:ratio_HR_valuability:ok]' palette='Proportions' type='shape'>
            <map to='Proportions/0.png'>
              <bucket>0.33079998559233498</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.39321472641789401</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.41918546462391298</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.43580187138980497</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>0.49304325093676499</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.35022650723488502</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.40952904160215697</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.42526620120265601</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.44177988478583002</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>0.49528556805249102</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.378781347265012</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.41187161030895397</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.42610461774286301</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.45910770636853998</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>0.52178920545342</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.38648116843860397</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.41361421599339199</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.42752925922134599</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.47812696229405299</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>0.54457152379076801</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.38927630559429699</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.41836890727155401</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.43096826359409701</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.48024203867047199</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>0.55593220338983096</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:ratio_HR_valuability (bin):ok]' palette='Proportions' type='shape'>
            <map to='Proportions/0.png'>
              <bucket>0</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>1</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>2</bucket>
            </map>
            <map to='Proportions/1.png'>
              <bucket>3</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>4</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:ratio_avg_valuability (bin):ok]' type='shape'>
            <map to='Proportions/0.png'>
              <bucket>0</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>4</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>5</bucket>
            </map>
            <map to='Proportions/2.png'>
              <bucket>6</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>7</bucket>
            </map>
            <map to='Proportions/3.png'>
              <bucket>8</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>9</bucket>
            </map>
            <map to='Proportions/4.png'>
              <bucket>10</bucket>
            </map>
            <map to='plus'>
              <bucket>2</bucket>
            </map>
            <map to='square'>
              <bucket>1</bucket>
            </map>
            <map to='times'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:weight_kg (bin):ok]' type='palette'>
            <map to='#309143'>
              <bucket>3</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>11</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>1</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>2</bucket>
            </map>
            <map to='#c43141'>
              <bucket>10</bucket>
            </map>
            <map to='#e03531'>
              <bucket>5</bucket>
            </map>
            <map to='#e39802'>
              <bucket>4</bucket>
            </map>
            <map to='#e66549'>
              <bucket>9</bucket>
            </map>
            <map to='#f47f4a'>
              <bucket>8</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>6</bucket>
            </map>
            <map to='#f7b254'>
              <bucket>7</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:height (bin):ok]' type='palette'>
            <map to='#2a5783'>
              <bucket>40</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>7</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>38</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>37</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>36</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:bmi_bin:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;average (24-26)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;low (22-24)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;very low (-22)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;very high (28-)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;high (26-28)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:handedness:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;R&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:HR_normalized:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:HR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[med:HR_normalized:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:weight:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[med:avg_normalized:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg_normalized:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg_normalized:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR_normalized:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR_normalized:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_1032168778986221568:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:valuability_normalized:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:valuability_normalized:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:valuability_normalized:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg_normalized:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[med:HR:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:Calculation_212795121468489732:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_212795121468489732:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]:1&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_1032168778986573825:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <actions>
    <action caption='OverHighlighter' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Homerunners Features' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Homerunners Features' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Top Performers Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Top Performers Dashboard' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Top 10 Batting Average Handedness' />
      <command command='tsc:brush'>
        <param name='field-captions' value='handedness' />
        <param name='target' value='Top 10 Batting Average Handedness' />
      </command>
    </action>
    <action caption='Filter1' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Homerunners Features' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Homerunners Features' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Top 10 Homerunners BMI' />
      <command command='tsc:brush'>
        <param name='field-captions' value='bmi_bin' />
        <param name='target' value='Top 10 Homerunners BMI' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Homerunners Features' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Homerunners Features' />
      </command>
    </action>
    <action caption='Highlight4' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Top 10 Homerunners BMI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Top 10 Homerunners BMI' />
        <param name='special-fields' value='all' />
        <param name='target' value='Homerunners Features' />
      </command>
    </action>
    <action caption='SelectHighlighter' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Batting Average Features' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Batting Average Features' />
      </command>
    </action>
    <action caption='OverHighlighter' name='[Action9]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Batting Average Features' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Batting Average Features' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='BMI Top Batting Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Body Mass Index (BMI)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column datatype='real' name='[bmi]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bmi]' derivation='None' name='[none:bmi:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]' filter-group='5' included-values='in-range'>
            <min>0.29899999999999999</min>
            <max>5.0</max>
          </filter>
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='198' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='BMI Top Homerunners'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Body Mass Index (BMI)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column datatype='real' name='[bmi]' role='measure' type='quantitative' />
            <column datatype='string' name='[bmi_bin]' role='dimension' type='nominal' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bmi]' derivation='None' name='[none:bmi:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (bmi_bin,name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[bmi_bin]' member='&quot;average (24-26)&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[name]' member='&quot;Carl Yastrzemski&quot;' />
                <groupfilter function='member' level='[name]' member='&quot;Darrell Evans&quot;' />
                <groupfilter function='member' level='[name]' member='&quot;Dave Kingman&quot;' />
                <groupfilter function='member' level='[name]' member='&quot;Graig Nettles&quot;' />
                <groupfilter function='member' level='[name]' member='&quot;Jim Rice&quot;' />
                <groupfilter function='member' level='[name]' member='&quot;Johnny Bench&quot;' />
                <groupfilter function='member' level='[name]' member='&quot;Mike Schmidt&quot;' />
                <groupfilter function='member' level='[name]' member='&quot;Willie Stargell&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>372</min>
            <max>563</max>
          </filter>
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]</column>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (bmi_bin,name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='143' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Height Top Batting Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Height</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column datatype='integer' name='[height]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[height]' derivation='None' name='[none:height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]' filter-group='5' included-values='in-range'>
            <min>0.29899999999999999</min>
            <max>5.0</max>
          </filter>
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:height:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:height:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:height:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='226' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.097955800592899323' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:height:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Height Top Homerunners'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Height</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column datatype='string' name='[bmi_bin]' role='dimension' type='nominal' />
            <column datatype='integer' name='[height]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[height]' derivation='None' name='[none:height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (bmi_bin,name)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[bmi_bin]' />
              <groupfilter function='level-members' level='[name]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>372</min>
            <max>563</max>
          </filter>
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]</column>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (bmi_bin,name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:height:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:height:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:height:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='226' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.097955800592899323' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:height:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Top 10 Batting Average'>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column-instance column='[avg]' derivation='Avg' name='[avg:avg:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg]' derivation='Sum' name='[sum:avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]' filter-group='5' included-values='in-range'>
            <min>0.29899999999999999</min>
            <max>5.0</max>
          </filter>
          <filter class='categorical' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:name:nk]' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Rico Carty&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' direction='DESC' using='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg:qk]' />
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]</column>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' field-type='quantitative' major-show='false' minor-show='false' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' scope='cols' value='false' />
            <format attr='display' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' scope='cols' value='false' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.29585635662078857' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.064972378313541412' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</rows>
        <cols>([federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk] + [federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Batting Average Handedness'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Batting Average&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column-instance column='[avg]' derivation='Avg' name='[avg:avg:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column datatype='string' name='[handedness]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;B&quot;' value='Both' />
                <alias key='&quot;L&quot;' value='Left' />
                <alias key='&quot;R&quot;' value='Right' />
              </aliases>
            </column>
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[handedness]' derivation='None' name='[none:handedness:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg]' derivation='Sum' name='[sum:avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]' filter-group='5' included-values='in-range'>
            <min>0.29899999999999999</min>
            <max>5.0</max>
          </filter>
          <filter class='categorical' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:name:nk]' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Rico Carty&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' direction='DESC' using='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg:qk]' />
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]</column>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' field-type='quantitative' major-show='false' minor-show='false' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' scope='cols' value='false' />
            <format attr='display' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' scope='cols' value='false' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]' value='Handedness&#10;'>
              <formatted-text>
                <run>Handedness&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.29585635662078857' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.064972378313541412' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</rows>
        <cols>([federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk] + [federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Homerunners'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Homerunners&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column caption='height_cm' datatype='real' name='[Calculation_212795121468162051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height] * 2.54' />
            </column>
            <column caption='weight_kg' datatype='real' name='[Calculation_212795121468489732]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[weight] * 0.45359237' />
            </column>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column datatype='real' name='[HR_normalized]' role='measure' type='quantitative' />
            <column datatype='integer' name='[height]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HR_normalized]' derivation='None' name='[none:HR_normalized:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_212795121468162051]' derivation='Sum' name='[sum:Calculation_212795121468162051:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_212795121468489732]' derivation='Sum' name='[sum:Calculation_212795121468489732:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HR]' derivation='Sum' name='[sum:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[height]' derivation='Sum' name='[sum:height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>372</min>
            <max>563</max>
          </filter>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR_normalized:qk]' included-values='all' />
          <sort class='computed' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' direction='DESC' using='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' />
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR_normalized:qk]</column>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' field-type='quantitative' fold='true' major-show='false' minor-show='false' scope='cols' type='space' />
            <format attr='title' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='Homeruns' />
            <format attr='subtitle' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' field-type='quantitative' major-show='false' minor-show='false' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='false' />
            <format attr='display' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' value='19' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:  &#9;</run>
                <run bold='true'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weight in kg:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weigh in lbs:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Homeruns:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[:Measure Names]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:weight:qk]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_212795121468489732:qk]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_212795121468162051:qk]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:height:qk]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' indent='1260'>Name:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Homeruns:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Weight:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_212795121468489732:qk]&gt; kg</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Weight :&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:weight:qk]&gt; lbs</run>
                <run>Æ&#10;</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Height:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_212795121468162051:qk]&gt; cm</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Height:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:height:qk]&gt; inch</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.042983423918485641' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</rows>
        <cols>([federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk] + [federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Homerunners BMI'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Homerunners&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column caption='height_cm' datatype='real' name='[Calculation_212795121468162051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[height] * 2.54' />
            </column>
            <column caption='weight_kg' datatype='real' name='[Calculation_212795121468489732]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[weight] * 0.45359237' />
            </column>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column datatype='real' name='[HR_normalized]' role='measure' type='quantitative' />
            <column datatype='string' name='[bmi_bin]' role='dimension' type='nominal' />
            <column datatype='integer' name='[height]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HR_normalized]' derivation='None' name='[none:HR_normalized:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bmi_bin]' derivation='None' name='[none:bmi_bin:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_212795121468162051]' derivation='Sum' name='[sum:Calculation_212795121468162051:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_212795121468489732]' derivation='Sum' name='[sum:Calculation_212795121468489732:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HR]' derivation='Sum' name='[sum:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[height]' derivation='Sum' name='[sum:height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>372</min>
            <max>563</max>
          </filter>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR_normalized:qk]' included-values='all' />
          <sort class='computed' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' direction='DESC' using='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' />
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR_normalized:qk]</column>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' field-type='quantitative' fold='true' major-show='false' minor-show='false' scope='cols' type='space' />
            <format attr='title' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='Homeruns' />
            <format attr='subtitle' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' field-type='quantitative' major-show='false' minor-show='false' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='false' />
            <format attr='display' class='1' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' scope='cols' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' value='19' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi_bin:nk]' value='BMI&#10;'>
              <formatted-text>
                <run>BMI&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi_bin:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi_bin:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:  &#9;</run>
                <run bold='true'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weight in kg:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weigh in lbs:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Homeruns:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi_bin:nk]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:weight:qk]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_212795121468489732:qk]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_212795121468162051:qk]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:height:qk]' />
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' indent='1260'>Name:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Homeruns:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Weight:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_212795121468489732:qk]&gt; kg</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Weight :&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:weight:qk]&gt; lbs</run>
                <run>Æ&#10;</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Height:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:Calculation_212795121468162051:qk]&gt; cm</run>
                <run indent='1260'>Æ&#10;</run>
                <run fontcolor='#787878' indent='1260'>Height:&#9;</run>
                <run bold='true' indent='1260'>&lt;[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:height:qk]&gt; inch</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.042983423918485641' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</rows>
        <cols>([federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk] + [federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk])</cols>
        <show-full-range>
          <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[height_cm (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Weight Top Batting Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weight&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[avg]' derivation='None' name='[none:avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[weight]' derivation='None' name='[none:weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='Sum' name='[sum:avg:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]' filter-group='5' included-values='in-range'>
            <min>0.29899999999999999</min>
            <max>5.0</max>
          </filter>
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]' value='64' />
            <format attr='title' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='338' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]' />
              <text column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.07596684992313385' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Weight Top Home Runners'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weight&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='baseball_data' name='federated.1ebegqm0f2d87w18m1zhp0hlp0tp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
            <column aggregation='None' caption='HR Bin 2' datatype='integer' name='[HR (bin) 2]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='2' formula='[HR]' peg='0' size='150' />
            </column>
            <column datatype='integer' name='[HR]' role='measure' type='quantitative' />
            <column datatype='string' name='[bmi_bin]' role='dimension' type='nominal' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[HR (bin) 2]' derivation='None' name='[none:HR (bin) 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[HR]' derivation='None' name='[none:HR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[weight]' derivation='None' name='[none:weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HR]' derivation='Sum' name='[sum:HR:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (bmi_bin,name)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[bmi_bin]' />
              <groupfilter function='level-members' level='[name]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>372</min>
            <max>563</max>
          </filter>
          <slices>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]</column>
            <column>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (bmi_bin,name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]' value='64' />
            <format attr='title' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='338' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:HR:qk]' />
              <text column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]' />
              <lod column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR (bin) 2:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.07596684992313385' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:weight:qk]</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Batting Average Features'>
      <style />
      <size maxheight='1200' maxwidth='1000' minheight='1200' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='25000' id='1' name='Top 10 Batting Average Handedness' w='84800' x='0' y='0' />
              <zone h='46167' id='8' name='Weight Top Batting Average' w='49800' x='0' y='25000' />
              <zone h='28833' id='9' name='BMI Top Batting Average' w='99600' x='0' y='71167' />
              <zone h='46167' id='10' name='Height Top Batting Average' w='49800' x='49800' y='25000' />
              <zone fixed-size='160' h='25000' id='4' is-fixed='true' param='vert' type='layout-flow' w='14800' x='84800' y='0'>
                <zone h='9416' id='7' name='Top 10 Batting Average Handedness' pane-specification-id='2' param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]' type='color' w='14800' x='84800' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparison of Baseball Players' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Comparison Of The Top Baseball Players</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='423' />
        </style-rule>
      </style>
      <size maxheight='1600' maxwidth='1100' minheight='1600' minwidth='1100' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3875' id='3' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='298' h='19125' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='3875' />
            <zone h='76750' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='23000'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Who are the top performing baseball players?&#10;&#10;ReggieJackson, Mike Schmidt and Willi Stargell are the top homerunners&#10;&#10;Rod Carew, Lyman Bostock, Matty Alou are the players with  highest batting average' captured-sheet='Top Performers Dashboard' id='1' />
                  <story-point caption='The most of the top homerunners are having a body mass index (BMI) between 24-26.&#10;&#10;Reggie Jackson, who is the top homerunner has a BMI of over 26. Although he is not the tallest, he was quiet heavy. He was packed with muscles which gave him his speed.&#10;&#10;Tony Perez on the other hand had a low BMI. He was tall and very light. ' captured-sheet='Homerunners Features' id='2'>
                    <capturedDeltas>
                      <worksheet name='BMI Top Homerunners'>
                        <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
                          <column caption='Action (height,name)' datatype='tuple' hidden='true' name='[Action (height,name)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column datatype='integer' name='[height]' role='measure' type='quantitative' />
                          <column-instance column='[height]' derivation='None' name='[none:height:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (bmi_bin,name)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[bmi_bin]' />
                            <groupfilter function='level-members' level='[name]' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (height,name)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[none:height:ok]' />
                            <groupfilter function='level-members' level='[name]' />
                          </groupfilter>
                        </filter>
                        <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' included-values='in-range-or-null'>
                          <min>370</min>
                          <max>563</max>
                        </filter>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='Height Top Homerunners'>
                        <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' included-values='in-range-or-null'>
                          <min>370</min>
                          <max>563</max>
                        </filter>
                      </worksheet>
                      <worksheet name='Top 10 Homerunners BMI'>
                        <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
                          <column caption='Action (height,name)' datatype='tuple' hidden='true' name='[Action (height,name)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column-instance column='[height]' derivation='None' name='[none:height:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (height,name)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[none:height:ok]' />
                            <groupfilter function='level-members' level='[name]' />
                          </groupfilter>
                        </filter>
                        <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' included-values='in-range-or-null'>
                          <min>370</min>
                          <max>563</max>
                        </filter>
                      </worksheet>
                      <worksheet name='Top Homerunners Weight'>
                        <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' included-values='in-range-or-null'>
                          <min>370</min>
                          <max>563</max>
                        </filter>
                      </worksheet>
                      <worksheet name='Weight Top Home Runners'>
                        <datasource-dependencies datasource='federated.1ebegqm0f2d87w18m1zhp0hlp0tp'>
                          <column caption='Action (height,name)' datatype='tuple' hidden='true' name='[Action (height,name)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column datatype='integer' name='[height]' role='measure' type='quantitative' />
                          <column-instance column='[height]' derivation='None' name='[none:height:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[Action (height,name)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[none:height:ok]' />
                            <groupfilter function='level-members' level='[name]' />
                          </groupfilter>
                        </filter>
                        <filter class='quantitative' column='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' included-values='in-range-or-null'>
                          <min>370</min>
                          <max>563</max>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The majority of the players with highest batting averages are left handed. &#10;&#10;Pete Rose is the only player who is both handed.&#10;&#10;Bill Madlock and Manny Mota are the only right handed players in the top 10.&#10;&#10;' captured-sheet='Batting Average Features' id='3'>
                    <capturedDeltas>
                      <worksheet name='Top 10 Batting Average Handedness'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Homerunners Features'>
      <style />
      <size maxheight='1000' maxwidth='1000' minheight='1000' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='29' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='22' param='horz' type='layout-flow' w='81300' x='0' y='0'>
              <zone h='100000' id='19' param='horz' type='layout-flow' w='81300' x='0' y='0'>
                <zone h='100000' id='13' param='horz' type='layout-flow' w='81300' x='0' y='0'>
                  <zone h='100000' id='5' param='horz' type='layout-flow' w='81300' x='0' y='0'>
                    <zone h='100000' id='3' type='layout-basic' w='81300' x='0' y='0'>
                      <zone h='35850' id='10' name='BMI Top Homerunners' w='81300' x='0' y='64150' />
                      <zone h='35850' id='11' name='Weight Top Home Runners' w='40650' x='0' y='28300' />
                      <zone h='35850' id='25' name='Height Top Homerunners' w='40650' x='40650' y='28300' />
                      <zone h='28300' id='32' name='Top 10 Homerunners BMI' w='81300' x='0' y='0' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='187' h='100000' id='28' is-fixed='true' param='vert' type='layout-flow' w='18700' x='81300' y='0'>
              <zone h='11300' id='33' name='Top 10 Homerunners BMI' pane-specification-id='4' param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi_bin:nk]' type='color' w='18700' x='81300' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top Performers Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='1' param='vert' type='layout-flow' w='99600' x='0' y='0'>
              <zone h='33625' id='7' param='horz' type='layout-flow' w='99600' x='0' y='0'>
                <zone h='33625' id='8' name='Top 10 Homerunners' w='51000' x='0' y='0'>
                  <layout-cache fixed-size-h='247' minwidth='260' type-h='fixed' type-w='scalable' />
                </zone>
                <zone h='33625' id='11' name='Top 10 Batting Average' w='48600' x='51000' y='0'>
                  <layout-cache fixed-size-h='257' minwidth='240' type-h='fixed' type-w='scalable' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Top 10 Batting Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Top 10 Batting Average Handedness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:avg:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 10 Homerunners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='4' param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Top 10 Homerunners BMI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='4' param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi_bin:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='BMI Top Batting Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='BMI Top Homerunners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Weight Top Home Runners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:HR:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weight Top Batting Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Height Top Homerunners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Height Top Batting Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Top Performers Dashboard'>
      <viewpoints>
        <viewpoint name='Top 10 Batting Average' />
        <viewpoint name='Top 10 Homerunners' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Homerunners Features'>
      <viewpoints>
        <viewpoint name='BMI Top Homerunners'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:bmi:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Height Top Homerunners'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Homerunners BMI' />
        <viewpoint name='Weight Top Home Runners'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Batting Average Features'>
      <viewpoints>
        <viewpoint name='BMI Top Batting Average'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Height Top Batting Average'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Batting Average Handedness'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg:qk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.30399999999999999</value>
                  <value>&quot;R&quot;</value>
                  <value>&quot;Manny Mota&quot;</value>
                  <value>0.30399999999999999</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg:qk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.30499999999999999</value>
                  <value>&quot;R&quot;</value>
                  <value>&quot;Bill Madlock&quot;</value>
                  <value>0.30499999999999999</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg:qk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.30599999999999999</value>
                  <value>&quot;L&quot;</value>
                  <value>&quot;Ralph Garr&quot;</value>
                  <value>0.30599999999999999</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor x-index='1'>
                    <x-fields x-index='1'>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                    </x-fields>
                    <y-fields x-index='1'>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg:qk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.30399999999999999</value>
                  <value>&quot;R&quot;</value>
                  <value>&quot;Manny Mota&quot;</value>
                  <value>0.30399999999999999</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor x-index='1'>
                    <x-fields x-index='1'>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                    </x-fields>
                    <y-fields x-index='1'>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg:qk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.30499999999999999</value>
                  <value>&quot;R&quot;</value>
                  <value>&quot;Bill Madlock&quot;</value>
                  <value>0.30499999999999999</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor x-index='1'>
                    <x-fields x-index='1'>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                    </x-fields>
                    <y-fields x-index='1'>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg:qk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.30399999999999999</value>
                  <value>&quot;L&quot;</value>
                  <value>&quot;Tony Oliva&quot;</value>
                  <value>0.30399999999999999</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor x-index='1'>
                    <x-fields x-index='1'>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                    </x-fields>
                    <y-fields x-index='1'>
                      <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[avg:avg:qk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:name:nk]</field>
                    <field>[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[sum:avg:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.30599999999999999</value>
                  <value>&quot;L&quot;</value>
                  <value>&quot;Ralph Garr&quot;</value>
                  <value>0.30599999999999999</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.1ebegqm0f2d87w18m1zhp0hlp0tp].[none:handedness:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Weight Top Batting Average'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Comparison of Baseball Players'>
      <viewpoints />
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BMI Top Batting Average' width='192'>
      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
      bQtaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='BMI Top Homerunners' width='192'>
      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
      0v4fjxqJPJ4M528AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Batting Average Features' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparison of Baseball Players' width='192'>
      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
      7f8DQS41gCiP7mIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Height Top Batting Average' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Height Top Homerunners' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Homerunners Features' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Batting Average' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Batting Average Handedness' width='192'>
      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
      qFtBoCSoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Homerunners' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Homerunners BMI' width='192'>
      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
      7Rw97kLKhAmMXubdd7K8/JXt+ESgmCU53cOFHpVsWxsN247SrEkTnBik983/SKerjNKqTWw7
      3IyusMT44BRdl01YX9yKXyMTHu/kcvcEWf82nt9pQ6PmiC9MEl0KEvL5sdy1ik2eYM9Zzg4n
      8G9uxW3Vrrw4igkW58OYagp3zZ796+ThC0A+SzYaIWyroMz8CWYzrRVv9Wb2lmmwWIxoNQJq
      sRqvVqZjZJ7xuSS1DWtH9gWWxzrpSpiwtB3jaHMZTqsJ3QP8AslcSXuzm9f7AkxVlaLErhEw
      lbKtugKPQbq5ORU81O+wIBiMGAw6NCKoxQrcuSA/Hp9lT70bq96APD9Kv6aK32lrpdpjQhJU
      irlKymtlrDoJAQv++gb86QuIBg/VDQ2Ua9bdZzWBi6rkme94nf5oC1/+zW1U+mxY9DpEUcBR
      1rhW4g4ln2Shu48FpZkXjrXh0kIhEWWq5yoBaztfP7yDMqseUc7gMqp0XLnOtbEmXlmLKTA4
      8DfUcXh/K267BZ2kUKLLEY8miJXt5vD2ChxWAxo1hhRPMri0SCwHfk2GyEKYPC7q29tp8eoQ
      VZl8VSUZWYv+ri8hhcTYJc50h7HW7aK9qRSbXrpvA8AP//4KgYXo/T/cT8nDFwBVRSkWKWq1
      aD/p14paDGY7640ygsaI2+vFMhthMZIAVgUgs8BiSsvWmv3sby3H8WkyDwhaHM07aBx5j+m+
      UwzOFvHtqKWixHJrChLBgM1tuO2rFnybyjF1R0nkC8gYEDUahEyK9GohOkEQ0RqsPNh5kYKs
      DNM5/SW+8eou6jxm7roNUfKklwa5eG4S/6Hv0u43IVEknQoxH8hQfXgHFXbDisooGvGWVlDp
      HePi8DSZhqYVtVNjwOzyU+axrY6diM5gxOq0g8ePz7E2k3Xo9Vp0goIiA0iIkkpRzpErKCuF
      9QQNeovrHnn9VXIL3Zy9HsJYs52dW2txGbUP9Lwm5yOfh5BIlWJqmcm+y1y6NsR8LEtRBYoZ
      4voy2g6ts2nqPFQ1VLGttQKH8f7fJLcjGkvY3l7FL967RNB2iD2V5Ti0d65UcnySa+c66BwJ
      EMmsVnopJggq2zi8um6LlXt5uewXvPvjf8uH3gqaGlpp3dJEhUOPdN+JswQkqYo9L+6mzmu6
      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
      YfQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Performers Dashboard' width='192'>
      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
      7f8DQS41gCiP7mIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Weight Top Batting Average' width='192'>
      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
      GKNx6QYdivjx+LUL3aAL6Dx1jPa+YSxJ6axYshib3UTlopFxrutsEuciBUzIkqNAIvFkNqgw
      LJkNKgxPAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxN
      AiAMTQIgDE0CIAxNAiAMTQIgDE0CIAxNAiAMLc5WCIXSY/S0N+Oz51M6MQuUwjvYyZG6Rkgt
      ZMmiCmwahAJDnKg7xoBfUT5vAUW5aVKEFQelFF39Ht79oJXB4QA3VE1j1pRcLNL2NiZxv1v1
      B97jo3NddHe6AIj5e9m27xSVy9dQnu1j87ZjqFiIhhONTJpVTe3KhdTv3YE7aNxO+vHQPejl
      sZf38/ruU+ysb+cXL+/n8KlO9MSXfFxX4gqApmlULlvHgtlT+LjF0jfYQ8bkaaQ6rOSVLMbi
      aSVkcbBw8VIKMp1omgW71YL8neKzq76d1gsrHRi5cPa7h1vlSvFjNO5FPMnZE/AfO8SpFHCa
      ITgUxA84lMIz0MmBg3Xkl1eRmWS9qBs0FouN99P5yup1eS+6UrzLE8AfCGHRZO1yqcY9AGZn
      DrVrltDe2U3YlIwjK41kFIOdTew91kHlkjVMzE5BA8xms3SDXqbZU/PYWd9BJDpymSRNg+mT
      sklLTsIuV4u/ZFdgjymCL6hRMn0GGfRjzyvFFg1y9Fgz1WvWMOnCwi/is3jmJNYtKiElyYbN
      YqZyegEblk7HZpUrxY9FXNWIH3eDDscihCKQkplDTU0V/S3HaT7XT3L2RKoqK7Dpfna+9y5B
      ZR/5QWsay1YsJs0+sqaSLcDlCYQiNJ8bxBsIU16UQ2aqQ46sjYFcKV4YmnSDCsOTAAhDkzFH
      QvTzzD//CrfZjDUpjbW3fYPKktyLDg7Eoi7+7c067rxj7f//0Xr6eObpZ7A4bGRMKOVrd95G
      Xpr9yj39rxDZAiSEB4+llAd//GP+6t4bePXpp+iNQNjvpunDRs72uEamOrQeZ/Pmd2hoaKRv
      2A8qRnfHaRqbThOIfHLOxOPXKF1xNw/9+EFqpwR55oVtRIFYyEfzqUZa2rqI6gpQuHvPcfLk
      SdrOD4ycf4lFOHu6iabTHYRj+p98xl9VsgVIJE0jOXcK5bkmBoYG2PTcMzgmlTPQspFVD/xH
      zN1dDLkHOHOmDXt2IX3H3+KPB/spyTezZV8h/+mBDZg+fdRHM1G6sArzvsPEVJgX/+fPYMo8
      Yr1nOFi2hrsXpPLM715nxswyuoeb+Mv77uDQv/2e3d12Jprd7JuwhO/cWm2otaIEIEH62k7y
      zpYthNydnE2azsqeYwTzqvn+PesINW/l8e31/Oie5ZRs6eG2224B/Pz2D03c/ZcPUppp5pc/
      +Sfc0fVkWc2gRzh5eDdvR1rpOtVAxdqvYRuoo8W2kH/+xu3EAj384tF/YXD2OkIxM4XFM7i5
      ogxNj7C1rpMH//v/wBHt44nHXmBwXTU5tkS/O1ePBCBB7M408vPzsRWXcFNpCT0nNlG3bTs/
      7TwCsQAppbWfm+oQpqethWefepRUCwy6NPxAFoCmkZaZReuhbXin3My3F5WgdbRiycgBwGyz
      k6Si6Hkz+d49OocO7OePr23mP//4r+luOczjP30Y0AmRhooCEgBxpaXlTWZ+ZeXoJMK8ibOY
      Maeb7//N97F622npt2LSUjBFBvCFo1g1J5VLZkP5Xdy0cAJH99eRYbow/NEsTC6dzd3fvYlX
      f/04z2/J4tvrFhCue5TOuxYSaT7IUHYxqcM9tISd3H7v/Xgf/gndEQuL5lcz5xv/nvn5FupP
      NOM00MIPcpG8BBlkx/Z2VtVWfjLeVjrtDft4/Z29kDKBO792J0U5yTTtf5NNu1uo/fq9zC8w
      8cZrr/HReS8VS29i/fIKzJrG4KCP9n4vlWX56BE/b736OnNu+Rqp7mZe3Pg2pqxS7v76rWTZ
      Iux8cyOHms4zo/ombls9l5C7k1dffIVuv5maG29l2dxpmA1yMlnOBAtDkzPBwvAkAMLQJADC
      0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0OTU63VMKUUkqqMrhc1ixmQyyByGcRR3N2gk4OF0
      04fE0qdSMS0PlE5Px0c0NLURs6VTU7OINIeFwFAvR4/W49PtzFmwkILMZKlHiYOuK5rO9vPO
      odO4PAHWLpxKzcxJ0gk0RnEPgZpO1hNUMYb6PQBEhrs4dKqPJatvoLosla3vHUbFQhzZd4CC
      iqUsXzCFD/YfJhxL+BSk61p7j5snNx5iR10bx1p6+O0bR9lzogNdl/d1LOLuBp2zaAWlxfmj
      DxT0uEjOLSTJZiG9cDZJgfN4gn7c5lSm5ibjzJxMutWHJygdlvHYc7yDrj7P6Ncef5idx9rx
      SzfomIx/N2huEer4bvYfcuG02Rh2B/HrMdA+TpuGDRPBmC7doHEY9gUv6gb1BkIEgyGsJtkK
      XKpxD4DJns6q2lrcwx4wWznb0UGGxQJKQwdMKIIqhvNCL6h0g16eyrJCdtZ3ELrw4XiTpjF7
      aj5pqU5sFqlHvFRX4DBomL4+DxnZ2QS6TuCcWIHdnkye5qHxnJvhnmZ85JCaJAt7PBaWTeCu
      VTPJTHXgsFlYPreIW5dOxyoXyBiTcekG9aLQdbAmZ1BTU43nXCMnW86TVTSDBTOLMWkasZCX
      +iOHccVSWLRoPqkO6+hRINkCXJ5oTKd7wIMvFKEoLx2HzSLdoGMgnwgThiafCBOGJwFIsIjP
      xYAnlOin8VkhDz0uf6KfxVXx/wAFB1gxg6p7ogAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weight Top Home Runners' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
