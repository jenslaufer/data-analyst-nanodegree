ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')+
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .25))
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')+
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5))
ggplot(aes(x = tenure / 365),
data = pf,
xlab = "Number of years on Facebook",
ylab = 'Number of users') +
geom_histogram(binwidth = .25,
color = 'black',
fill = '#F79420') +
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5))
ggplot(aes(x = tenure / 365),
data = pf) +
geom_histogram(binwidth = .25,
color = 'black',
fill = '#F79420') +
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5)) +
xlab("Number of years on Facebook") +
ylab = 'Number of users'
ggplot(aes(x = tenure / 365),
data = pf) +
geom_histogram(binwidth = .25,
color = 'black',
fill = '#F79420') +
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5)) +
xlab("Number of years on Facebook") +
ylab('Number of users')
View(pf)
View(pf)
ggplot(data=pf, mapping=aes(x=age))
ggplot(data=pf, mapping=aes(x=age)) +
geom_histogram(binwidth = 5)
ggplot(data=pf, mapping=aes(x=age)) +
geom_histogram(binwidth = 1)
ggplot(data=pf, mapping=aes(x=age)) +
geom_histogram(binwidth = 2)
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 2) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 1))
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 2) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 2))
by(pf$age, summary)
summary(pf$age)
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 2) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 2))
summary(pf$age)
summary(pf$age)
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 2) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 2))
``{r User Ages}
summary(pf$age)
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 2) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 2))
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 2) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 2))
summary(pf$age)
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 2))
install.packages('gridExtra')
pf <-  read.csv(
"pseudo_facebook.tsv",
sep="\t")
names(pf)
str(pf)
library(ggplot2)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
library(ggplot2)
ggplot(data = pf, mapping=aes(x = friend_count)) +
geom_histogram(binwidth = 1) +
xlim(0, 1000)
ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 10000,50))
# What code would you add to create a facet the histogram by gender?
# Add it to the code below.
qplot(x = friend_count,
data = pf,
binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap( ~ gender)
qplot(x = friend_count,
data = subset(pf,!is.na(gender)),
binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap( ~ gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure / 365),
data = pf) +
geom_histogram(binwidth = .25,
color = 'black',
fill = '#F79420') +
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5)) +
xlab("Number of years on Facebook") +
ylab('Number of users')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')+
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5))
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 2))
```{r User Ages}
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10)
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10)
p2 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10) + scale_y_log10()
p3 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10) + scale_y_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
library(gridExtra)
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10)
p2 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10) + scale_y_log10()
p3 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10) + scale_y_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
library(gridExtra)
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10)
p2 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10) + scale_x_log10()
p3 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10) + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
library(gridExtra)
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10, color = 'black', fill = '#099DD9')
p2 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10, color = 'black', fill = '#099DD9') + scale_y_log10()
p3 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10, color = 'black', fill = '#099DD9') + scale_y_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
library(gridExtra)
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10,
color = 'black',
fill = '#099DD9')
p2 = ggplot(data = pf, mapping = aes(x = friend_count + 1)) +
geom_histogram(binwidth = 10,
color = 'black',
fill = '#099DD9') + scale_x_log10()
p3 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 10,
color = 'black',
fill = '#099DD9') + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
1,
library(gridExtra)
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = '#099DD9')
p2 = ggplot(data = pf, mapping = aes(x = friend_count + 1)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = '#099DD9') + scale_x_log10()
p3 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = '#099DD9') + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
library(gridExtra)
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = '#099DD9')
p2 = ggplot(data = pf, mapping = aes(x = friend_count + 1)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = '#099DD9') + scale_x_log10(breaks = seq(0, 1000, 1))
p3 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = '#099DD9') + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
library(gridExtra)
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = '#099DD9')
p2 = p1 + scale_x_log10(breaks = seq(0, 1000, 1))
p3 = p1 + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
library(gridExtra)
p1 = ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 1,
color = 'black',
fill = '#099DD9')
p2 = p1 + scale_x_log10()
p3 = p1 + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p1 = ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = scale_x_log10()
grid.arrange(p1, p2, p3, ncol = 1)
p1 = ggplot(aes(x = friend_count, y = ..count.. / sum(..count..)), data = subset(pf,!is.na(gender))) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 +
geom_freqpoly(aes(color = gender), binwidth = 10) +
p2 = p1 + scale_x_log10()
p1 = ggplot(aes(x = friend_count, y = ..count.. / sum(..count..)), data = subset(pf,!is.na(gender))) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 +
geom_freqpoly(aes(color = gender), binwidth = 10) +
p2 = p1 + scale_x_log10()
p1 = ggplot(aes(x = friend_count, y = ..count.. / sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
p2 = p1 + scale_x_log10()
p1 = ggplot(aes(x = friend_count, y = ..count.. / sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p2 = p1 + scale_x_log10()
grid.arrange(p2, p3, ncol = 1)
p1 = ggplot(aes(x = friend_count, y = ..count.. / sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p3 = p1 + scale_x_log10()
grid.arrange(p2, p3, ncol = 1)
p1 = ggplot(aes(x = www_likes, y = ..count.. / sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
grid.arrange(p1,ncol(1))
p1 = ggplot(aes(x = www_likes, y = ..count.. / sum(..count..)), data = subset(pf,!is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 + scale_x_continuous()
grid.arrange(p2, ncol(1))
p1 = ggplot(aes(x = www_likes), data = subset(pf,!is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 + scale_x_continuous()
grid.arrange(p2, ncol(1))
View(pf)
View(pf)
p1 = ggplot(aes(x = likes), data = subset(pf,!is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 + scale_x_continuous()
grid.arrange(p2, ncol(1))
pf <-  read.csv(
"pseudo_facebook.tsv",
sep="\t")
names(pf)
str(pf)
library(ggplot2)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
library(ggplot2)
ggplot(data = pf, mapping=aes(x = friend_count)) +
geom_histogram(binwidth = 1) +
xlim(0, 1000)
ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 10000,50))
# What code would you add to create a facet the histogram by gender?
# Add it to the code below.
qplot(x = friend_count,
data = pf,
binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap( ~ gender)
qplot(x = friend_count,
data = subset(pf,!is.na(gender)),
binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap( ~ gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure / 365),
data = pf) +
geom_histogram(binwidth = .25,
color = 'black',
fill = '#F79420') +
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5)) +
xlab("Number of years on Facebook") +
ylab('Number of users')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')+
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5))
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 2))
```{r User Ages}
pf <-  read.csv(
"pseudo_facebook.tsv",
sep="\t")
names(pf)
str(pf)
library(ggplot2)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
library(ggplot2)
ggplot(data = pf, mapping=aes(x = friend_count)) +
geom_histogram(binwidth = 1) +
xlim(0, 1000)
ggplot(data = pf, mapping = aes(x = friend_count)) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 10000,50))
# What code would you add to create a facet the histogram by gender?
# Add it to the code below.
qplot(x = friend_count,
data = pf,
binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap( ~ gender)
qplot(x = friend_count,
data = subset(pf,!is.na(gender)),
binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap( ~ gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure / 365),
data = pf) +
geom_histogram(binwidth = .25,
color = 'black',
fill = '#F79420') +
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5)) +
xlab("Number of years on Facebook") +
ylab('Number of users')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')+
scale_x_continuous(limits = c(0, 7),
breaks = seq(0, 7, .5))
ggplot(data = pf, mapping = aes(x = age)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(limits = c(0, 100),
breaks = seq(0, 100, 2))
```{r User Ages}
p1 = ggplot(aes(x = likes), data = subset(pf,!is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 + scale_x_continuous()
grid.arrange(p2, ncol(1))
p1 = ggplot(aes(x = likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 + scale_x_continuous()
grid.arrange(p2, ncol = 1
grid.arrange(p2, ncol = 1)
p1 = ggplot(aes(x = likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
p2 = p1 + scale_x_continuous()
p3 = p1 + scale_x_log10()
grid.arrange(p2, p3, ncol = 1)
p1 = ggplot(aes(x = likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Likes Count') +
ylab('Number od users that have likes')
p2 = p1 + scale_x_continuous()
p3 = p1 + scale_x_log10()
grid.arrange(p2, p3, ncol = 1)
p1 = ggplot(aes(x = likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Likes Count') +
ylab('Number od users that have likes')
p2 = p1 + scale_x_continuous()
p3 = p1 + scale_x_log10()
grid.arrange(p2, p3, ncol = 1)
p1 = ggplot(aes(x = likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Likes Count') +
ylab('Number od users that have likes')
p2 = p1 + scale_x_continuous()
p3 = p1 + scale_x_log10()
grid.arrange(p2, p3, ncol = 1)
p1 = ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Likes Count') +
ylab('Number od users that have likes')
p2 = p1 + scale_x_continuous()
p3 = p1 + scale_x_log10()
grid.arrange(p2, p3, ncol = 1)
p1 = ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 10) +
xlab('Likes Count') +
ylab('Number od users that have likes') + scale_x_continuous()
p2 = p1 + scale_x_log10()
grid.arrange(p1, p2, ncol = 1)
p1 = ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth = 1) +
xlab('Likes Count') +
ylab('Number od users that have likes') + scale_x_continuous()
p2 = p1 + scale_x_log10()
grid.arrange(p1, p2, ncol = 1)
p1 = ggplot(aes(x = www_likes), data = subset(pf,!is.na(gender))) +
geom_freqpoly(aes(color = gender)) + scale_x_continuous()
p2 = p1 + scale_x_log10()
grid.arrange(p1, p2, ncol = 1)
install.packages('Rformat')
install.packages('formatR')
tidyr()
tidyr
tidy_source()
library(formatR)
tidy_source()
library(formatR)
tidy_source()
grid.arrange(p1, p2, p3, ncol = 1)
library(formatR)
tidy_source()
tidy_source(soure)
essionInfo()
sessionInfo()
tidy_source(source='lesson3_student.rmd')
getwd()
tidy_source(source='C:/Users/jensl/Documents/data-analyst-nanodegree/p4/lesson2/lesson3_student.rmd')
tidy_source(source='C:/Users/jensl/Documents/data-analyst-nanodegree/p4/lesson3/lesson3_student.rmd')
tidy_source()
tidy_source(source='C:/Users/jensl/Documents/data-analyst-nanodegree/p4/lesson2/demystifying.R')
library(formatR)
tidy_source()
udacious
numbers <- c(1:10)
source('~/data-analyst-nanodegree/p4/lesson2/demystifying.R')
numbers
udacious = c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
library(formatR)
tidy_source()
udacious
numbers <- c(1:10)
by(pf$www_likes, pf$gender)
by(pf$www_likes, pf$gender,summary)
by(pf$www_likes, pf$gender,sum)
